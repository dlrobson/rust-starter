name: Rust Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: debug
  RUST_BACKTRACE: full

# This stops any running jobs when a new commit is pushed
# Reference: https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-image:
    uses: ./.github/workflows/build-image.yml

  build:
    runs-on: ubuntu-latest
    needs: build-image
    container:
      image: ghcr.io/${{ github.event.repository.name }}:${{ needs.build-image.outputs.image-tag }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            target/
          key: build-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            build-

      - name: Run tests
        run: cargo test --locked --profile release

      - name: Generate Docs
        if: ${{ !cancelled() }}
        run: cargo doc --profile release --locked --no-deps --document-private-items --all-features

      - name: Upload Docs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: target/x86_64-unknown-linux-gnu/doc

  quality-check:
    runs-on: ubuntu-latest
    needs: build-image
    container:
      image: ghcr.io/${{ github.event.repository.name }}:${{ needs.build-image.outputs.image-tag }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            target/
          key: quality-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            quality-

      - name: Check Rust formatting
        if: ${{ !cancelled() }}
        run: cargo fmt --check

      - name: Check spelling
        if: ${{ !cancelled() }}
        run: cargo-spellcheck check

      - name: Check for clippy warnings
        if: ${{ !cancelled() }}
        run: cargo clippy --all-targets --all-features -- -D warnings

  code-coverage:
    runs-on: ubuntu-latest
    needs: build-image
    container:
      image: ghcr.io/${{ github.event.repository.name }}:${{ needs.build-image.outputs.image-tag }}

    # Needed to write a coverage report to the PR
    permissions: write-all
     
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            target/**/*[\!.gcno\|\!.gcda]
          key: coverage-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            coverage-

      - name: Run tests with coverage
        run: cargo test --locked --profile coverage -- --nocapture
        env:
          RUSTDOCFLAGS: -Cpanic=abort

      - name: Generate LCOV coverage file
        run: |
          grcov target/ \
            --branch -s . --binary-path ./target/ \
            -t lcov -o coverage.lcov \
            --keep-only "src/**" --ignore-not-existing \
            --ignore "**/lib.rs" --ignore "**/mod.rs"

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: coverage.lcov
          minimum-coverage: 90
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
